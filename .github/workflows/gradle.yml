name: Gradle Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      - name: Install Chrome
        id: setup-chrome
        uses: browser-actions/setup-chrome@v1

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x gradlew

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle (headless, isolated profile)
        env:
          CHROME_PATH: ${{ steps.setup-chrome.outputs.chrome-path }}
          USER_DIR: ${{ runner.temp }}/chrome-user-${{ github.run_id }}-${{ github.run_attempt }}
          SERENITY_DEBUG: webdriver
          SERENITY_DRIVER_CAPABILITIES__GOOG_CHROMEOPTIONS__BINARY: ${{ steps.setup-chrome.outputs.chrome-path }}
          SERENITY_DRIVER_CAPABILITIES__GOOG_CHROMEOPTIONS__ARGS: --headless=new,--no-sandbox,--disable-dev-shm-usage,--disable-gpu,--window-size=1920,1080,--remote-allow-origins=*,--user-data-dir=${{ runner.temp }}/chrome-user-${{ github.run_id }}-${{ github.run_attempt }}
        run: |
          set -e
          echo "Using CHROME_PATH=$CHROME_PATH"
          echo "Using USER_DIR=$USER_DIR"
          echo "SERENITY_DEBUG=$SERENITY_DEBUG"
          echo "SERENITY_DRIVER_CAPABILITIES__GOOG_CHROMEOPTIONS__BINARY=$SERENITY_DRIVER_CAPABILITIES__GOOG_CHROMEOPTIONS__BINARY"
          echo "SERENITY_DRIVER_CAPABILITIES__GOOG_CHROMEOPTIONS__ARGS=$SERENITY_DRIVER_CAPABILITIES__GOOG_CHROMEOPTIONS__ARGS"
          export SERENITY_DEBUG="$SERENITY_DEBUG"
          export SERENITY_DRIVER_CAPABILITIES__GOOG_CHROMEOPTIONS__BINARY="$SERENITY_DRIVER_CAPABILITIES__GOOG_CHROMEOPTIONS__BINARY"
          export SERENITY_DRIVER_CAPABILITIES__GOOG_CHROMEOPTIONS__ARGS="$SERENITY_DRIVER_CAPABILITIES__GOOG_CHROMEOPTIONS__ARGS"
          mkdir -p "$USER_DIR"
          # Try build with retry mechanism
          for i in {1..3}; do
            echo "Build attempt $i"
            if ./gradlew --no-daemon clean test aggregate \
              -Dwebdriver.driver=chrome \
              -Dserenity.driver.capabilities.'goog:chromeOptions'.binary="$CHROME_PATH" \
              -Dserenity.driver.capabilities.'goog:chromeOptions'.args='--headless=new,--no-sandbox,--disable-dev-shm-usage,--disable-gpu,--window-size=1920,1080,--remote-allow-origins=*,--user-data-dir='"$USER_DIR"; then
              echo "Build successful on attempt $i"
              break
            else
              echo "Build failed on attempt $i"
              if [ $i -lt 3 ]; then
                echo "Cleaning Gradle cache and retrying..."
                rm -rf ~/.gradle/caches/jars-*
                sleep 10
              else
                echo "All build attempts failed"
                exit 1
              fi
            fi
          done

      - name: Upload test reports (JUnit)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: junit-test-results
          path: build/test-results/test

      - name: Upload Serenity reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: serenity-site
          path: build/reports/serenity